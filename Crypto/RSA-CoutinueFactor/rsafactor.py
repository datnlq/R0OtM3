#!/urs/bin/env python3.5

from Crypto.Util.number import *
from Crypto.PublicKey import RSA
from binascii import *
import base64
import binascii


E = "0xf70b3bd74801a25eccbde24e01b077677e298391d4197b099a6f961244f04314da7de144dd69a8aa84686bf4ddbd14a6344bbc315218dbbaf29490a44e42e5c4a2a4e76b8101a5ca82351c07b4cfd4e08038c8d5573a827b227bce515b70866724718ec2ac03359614cdf43dd88f1ac7ee453917975a13c019e620e531207692224009c75eaef11e130f8e54cce31e86c84e9366219ae5c250853be145ea87dcf37aa7ece0a994195885e31ebcd8fe742df1cd1370c95b6684ab6c37e84762193c27dd34c3cf3f5e69957b8338f9143a0052c9381d9e2ecb9ef504c954b453f57632705ed44b28a4b5cbe61368e485da6af2dfc901e45868cdd5006913f338a3"
N = "0x0207a7df9d173f5969ad16dc318496b36be39fe581207e6ea318d3bfbe22c8b485600ba9811a78decc6d5aab79a1c2c491eb6d4f39820657b6686391b85474172ae504f48f02f7ee3a2ab31fce1cf9c22f40e919965c7f67a8acbfa11ee4e7e2f3217bc9a054587500424d0806c0e759081651f6e406a9a642de6e8e131cb644a12e46573bd8246dc5e067d2a4f176fef6eec445bfa9db888a35257376e67109faabe39b0cf8afe2ca123da8314d09f2404922fc4116d682a4bdaeecb73f59c49db7fa12a7fc5c981454925c94e0b5472e02d924dad62c260066e07c7d3b1089d5475c2c066b7f94553c75e856e3a2a773c6c24d5ba64055eb8fea3e57b06b04a3"



e = int(E,16)
n = int(N,16)


print(e) #31186400897019474935110647285445503673131446580681275776311671951414114788622345838774311877965990786720764658784947421898983517760738477784602362371051561562206808351224503093181667456617648598165647915091757078611302190825934535904283579772712691438112230134828980258111970295516689690256373292215340475163958923723790536805165847711775268441953305309821252180479573636847217520184023025127620891001593596764466667387987683667801953315782130313468664428515728986226452261450588569245373362702725469848655817202090205940445626402571508469590603334162227644680600619967899413710405809040986903674088539812272861821091
print(n) #65600461780989803766848392425426887870434366488494962966900808777432584484088221195303017908185765416426865541330492621828385095208401835694398180740583580467731175837961973916562100612373134902716587868046427380223327738540114777241641014871790815133235867909646828092331690444703436170746272569822738659402858823786521460740789564170287308513292418939316054128834222945338106076073139265530198099998748944323883371406422653204889570690803132164330855565516333393423122237578933112127930186731899656475860444002021681839995303291028010312901432208049210885186720776201994911765956299022808044735625894648965241701539


  //factordb
q = 240235037993086647490360091251920509660926008787784163933134217892938306866733942789677346753386227305733054945882967240289722901543973488715609201686292184661845932338700104193843036687863902362262743558762135191383008370605906319072352806840967443808455667223189470493469726348267326087313303773058894562037
p = 273067835270880086905225991495379768025497181071655465691068234751894433419924689398578343149876505032891110212422075482294849988417876098468455656340271714411918145829343178315564694346337087829483997746033122936265729805143582391157953230943745740375876718066059315171626227510845447370568918599985468283447


phi = (q-1)*(p-1)


d = inverse(e,phi)



k = RSA.construct((n,e,d,p,q))


print(k.exportKey())
